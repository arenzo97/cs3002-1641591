source('C:/Projects/CS3002/cs3002-1641591/Lab 1/1641591.r')
source('C:/Projects/CS3002/cs3002-1641591/Lab 1/1641591.r')
mydata=read.csv('forestfires.csv', sep=",")
mydata=plot(mydata$temp,mydata$ISI)
lmfire=line(mydata$ISI~mydata$temp)
abline(coef(lmfire))
mydata=read.csv('forestfires.csv', sep=",")
source('C:/Projects/CS3002/cs3002-1641591/Lab 1/1641591.r')
mydata=read.csv('forestfires.csv', sep=",")
source('C:/Projects/CS3002/cs3002-1641591/Lab 1/1641591.r')
myplot=plot(mydata$temp,mydata$ISI)
lmfire=line(myplot$ISI~mydata$temp)
mydata=read.csv('forestfires.csv', sep=",")
lmfire=line(myplot$ISI~mydata$temp)
myplot=plot(mydata$temp,mydata$ISI)
source('C:/Projects/CS3002/cs3002-1641591/Lab 1/1641591.r')
lmfire=line(myplot$ISI~mydata$temp)
abline(coef(lmfire))
PlotLine<-function(idata){plotline = plot(idata, type="1")}
PlotMean<-function(idata){meantemp = mean(idata)}
View(PlotLine)
function(idata){plotline = plot(idata, type="1")}
View(PlotLine)
View(PlotLine)
lmfire=line(myplot$ISI~myplot$temp)
PlotLine(mydata)
mydata=read.csv('forestfires.csv', sep=",")
PlotLine(mydata)
source('C:/Projects/CS3002/cs3002-1641591/Lab 1/1641591.r')
PlotLine(mydata$temp)
mydata=read.csv('forestfires.csv', sep=",")
PlotLine(mydata$temp)
mydata=read.csv('forestfires.csv', sep=",")
mydata=read.csv('forestfires.csv', sep=",")
(mydata$temp)
PlotLine(mydata$temp)
PlotMean(mydata$temp)
View(PlotMean)
View(PlotMean)
PlotMean(mydata$temp)
mydata=read.csv('forestfires.csv', sep=",")
PlotMean(mydata$temp)
#
mydata=read.csv('forestfires.csv', sep=",")
PlotMean(mydata$temp)
mydata=read.csv('forestfires.csv', sep=",")
PlotMean(mydata$temp)
PlotMean(mydata$temp)
PlotMean<-function(idata){mean = mean(idata)}
PlotMean(mydata$temp)
PlotMean(mydata$temp)
PlotMean<-function(idata){meanplot = mean(idata)}
PlotMean(mydata$temp)
source('C:/Projects/CS3002/cs3002-1641591/Lab 1/1641591.r')
source('C:/Projects/CS3002/cs3002-1641591/Lab 1/1641591.r')
View(PlotMean)
meanplot = mean(mydata$temp)
PlotMean(idata=mydata$temp)
#Set Directory to this current directory
this.dir <- dirname(parent.frame(2)$ofile)
setwd(this.dir)
mydata=read.csv('forestfires.csv', sep=",")
PlotMean(idata=mydata$temp)
meanplot = mean(mydata$temp)
#myplot=plot(mydata$temp,mydata$ISI)
#lmfire=line(myplot$ISI~myplot$temp)
#abline(coef(lmfire))
PlotLine<-function(idata){plotline = plot(idata, type="1")}
PlotMean<-function(idata){plotmean = mean(idata)}
View(PlotMean)
function(idata){plotmean = mean(idata)}
PlotMean<-function(idata)
{
plotmean = mean(idata)
return(plotmean)
}
source('C:/Projects/CS3002/cs3002-1641591/Lab 1/1641591.r')
source('C:/Projects/CS3002/cs3002-1641591/Lab 1/1641591.r')
#Set Directory to this current directory
this.dir <- dirname(parent.frame(2)$ofile)
setwd(this.dir)
mydata=read.csv('forestfires.csv', sep=",")
meanplot=PlotMean(idata=mydata$temp)
#meanplot = mean(mydata$temp)
#myplot=plot(mydata$temp,mydata$ISI)
#lmfire=line(myplot$ISI~myplot$temp)
#abline(coef(lmfire))
PlotLine<-function(idata){plotline = plot(idata, type="1")}
PlotMean<-function(idata)
{
plotmean = mean(idata)
return(plotmean)
}
meanplot=PlotMean(idata=mydata$temp)
source('C:/Projects/CS3002/cs3002-1641591/Lab 1/1641591.r')
#Set Directory to this current directory
this.dir <- dirname(parent.frame(2)$ofile)
setwd(this.dir)
mydata=read.csv('forestfires.csv', sep=",")
PlotLine<-function(idata){plotline = plot(idata, type="1")}
PlotMean<-function(idata)
{
plotmean = mean(idata)
return(plotmean)
}
meanplot=PlotMean(idata=mydata$temp)
#myplot=plot(mydata$temp,mydata$ISI)
#lmfire=line(myplot$ISI~myplot$temp)
#abline(coef(lmfire))
source('C:/Projects/CS3002/cs3002-1641591/Lab 1/1641591.r')
source('C:/Projects/CS3002/cs3002-1641591/Lab 1/1641591.r')
lineplot = PlotLine(mydata$temp)
source('C:/Projects/CS3002/cs3002-1641591/Lab 1/1641591.r')
regabline = abline(coef(lmfire))
#Set Directory to this current directory
this.dir <- dirname(parent.frame(2)$ofile)
setwd(this.dir)
mydata=read.csv('forestfires.csv', sep=",")
PlotLine<-function(idata){plotline = plot(idata, type="l4")}
PlotMean<-function(idata)
{
plotmean = mean(idata)
return(plotmean)
}
PlotRegressiveLinearModel<-function(idata1,idata2){
regLM = plot(idata1,idata2)
lmfire=line(idata2~idata2)
regabline = abline(coef(lmfire))
}
meanplot=PlotMean(mydata$temp)
lineplot = PlotLine(mydata$temp)
#myplot=plot(mydata$temp,mydata$ISI)
#lmfire=line(myplot$ISI~myplot$temp)
#abline(coef(lmfire))
source('C:/Projects/CS3002/cs3002-1641591/Lab 1/1641591.r')
source('C:/Projects/CS3002/cs3002-1641591/Lab 1/1641591.r')
source('C:/Projects/CS3002/cs3002-1641591/Lab 1/1641591.r')
source('C:/Projects/CS3002/cs3002-1641591/Lab 1/1641591.r')
write.csv(idata, file = paste(filename,".csv",sep=" "))
#Set Directory to this current directory
this.dir <- dirname(parent.frame(2)$ofile)
setwd(this.dir)
mydata=read.csv('forestfires.csv', sep=",")
PlotLine<-function(idata){plotline = plot(idata, type="l")}
PlotMean<-function(idata)
{
plotmean = mean(idata)
return(plotmean)
}
PlotRegressiveLinearModel<-function(idata1,idata2)
{
regLM = plot(idata1,idata2)
lmfire=line(idata2~idata2)
regabline = abline(coef(lmfire))
}
OutputToCSV<-function(idata,filename)
{
write.csv(idata, file = paste(filename,".csv",sep=" "))
}
meanplot=PlotMean(mydata$temp)
lineplot = PlotLine(mydata$temp)
OutputToCSV(meanplot,"mean")
#myplot=plot(mydata$temp,mydata$ISI)
#lmfire=line(myplot$ISI~myplot$temp)
#abline(coef(lmfire))
source('C:/Projects/CS3002/cs3002-1641591/Lab 1/1641591.r')
source('C:/Projects/CS3002/cs3002-1641591/Lab 1/1641591.r')
source('C:/Projects/CS3002/cs3002-1641591/Lab 1/1641591.r')
regplot = PlotRegressiveLinearModel(mydata$temp,mydata$ISI)
source('C:/Projects/CS3002/cs3002-1641591/Lab 1/1641591.r')
source('C:/Projects/CS3002/cs3002-1641591/Lab 1/1641591.r')
source('C:/Projects/CS3002/cs3002-1641591/Lab 1/1641591.r')
source('C:/Projects/CS3002/cs3002-1641591/Lab 1/1641591.r')
regplot = PlotRegressiveLinearModel(mydata$temp,mydata$ISI)
scatplot = PlotScattered(mydata$X,mydata$Y,mydata$temp)
lineplot = PlotLine(mydata$temp)
histplot = PlotHistograms(mydata$temp)
#Output to a CSV file
OutputToCSV(histplot,"hist")
#Output to a CSV file
OutputToCSV(meanplot,"mean2")
scatplot = PlotScattered(mydata$X,mydata$Y,mydata$wind)
source('C:/Projects/CS3002/cs3002-1641591/Lab 1/1641591.r')
scatplot = PlotScattered(mydata$X,mydata$Y,mydata$wind)
source('C:/Projects/CS3002/cs3002-1641591/Lab 1/1641591.r')
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
fit<-kmeans(mydata,5)
aggregate(mydata,by=list(fit$cluster),FUN=mean)
Kgroups=fit$cluster
plot(mydata,col=Kgroups)
fit<-kmeans(mydata,5)
aggregate(mydata,by=list(fit$cluster),FUN=mean)
Kgroups=fit$cluster
plot(mydata,col=Kgroups)
fit<-kmeans(mydata,5)
aggregate(mydata,by=list(fit$cluster),FUN=mean)
Kgroups=fit$cluster
plot(mydata,col=Kgroups)
View(mydata)
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
#Set Directory to this current directory
this.dir <- dirname(parent.frame(2)$ofile)
setwd(this.dir)
#WK Source
source("WK_R.r")
mydata = read.csv('iris.csv', sep=",")
mydata = na.omit(mydata)
mydata = scale(mydata)
#Scattered Plot
PlotScattered<-function(idata,kgroups)
{
plotscattered = plot(idata,col=kgroups)
return(plotscattered)
}
#Hierarchical Clustering
#generate matrix of euc. distances
d <- dist(mydata, method = "euclidean")
#hclst - using average - clusters and plots
fit <- hclust(d, method = "average")
plot(fit)
#create clusters by cutting dendogram
Hgroups <- cutree(fit, k=5)
#KMeans Clustering
KMeansFit<-function(idata,kvalue)
{
fit<-kmeans(idata,kvalue)
aggregate(idata,by=list(fit$cluster),FUN=mean)
Kgroups=fit$cluster
plot(idata,col=Kgroups)
return(fit)
}
#Calculate WK for K means
CalcWK<-function(kgroup1,kgroup2)
{
wk=WK_R()
return(wk)
}
#Hierarchical Clustering
#Single
#Complete
#Average
#Run Answers:
#1
CalcWK(KMeansFit(mydata,3),KMeansFit(mydata,6))
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
View(WK_R)
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
View(h1)
View(h2)
View(h3)
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
View(h1)
View(fit)
return(plot)
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
View(h1)
View(h2)
#2
h1 = HierarchicalPlot(mydata,"single")
h2 = HierarchicalPlot(mydata,"complete")
h3 = HierarchicalPlot(mydata,"average")
h2 = HierarchicalPlot(mydata,"complete")
#2
h1 = HierarchicalPlot(mydata,"single")
h2 = HierarchicalPlot(mydata,"complete")
#3
scatteredCluster = PlotScattered(mydata,3)
#3
scatteredCluster = PlotScattered(mydata,5)
#3
scatteredCluster = PlotScattered(mydata,1)
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
#3
scatteredCluster = PlotScattered(mydata,1)
#3
scatteredCluster = PlotScattered(mydata,2)
#3
scatteredCluster = PlotScattered(mydata,3)
#Run Answers:
#1
wkCalc = CalcWK(KMeansFit(mydata,3),KMeansFit(mydata,6))
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
#3
scatteredCluster = PlotScattered(mydata,3)
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
#3
scatteredCluster = PlotScattered(mydata,3)
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
#3
scatteredCluster = PlotScattered(mydata,3)
#3
scatteredCluster = PlotScattered(mydata,3)
#3
scatteredCluster = KMeansFit(3)
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
#3
scatteredCluster = KMeansFit(mydata,3)
#3
scatteredCluster = KMeansFit(mydata,5)
#3
scatteredCluster = KMeansFit(mydata,6)
#3
scatteredCluster = KMeansFit(mydata,1)
#3
scatteredCluster = KMeansFit(mydata,2)
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
regplot = PlotRegressiveLinearModel(mydata$temp,mydata$ISI)
source('C:/Projects/CS3002/cs3002-1641591/Lab 1/1641591.r')
regplot = PlotRegressiveLinearModel(mydata$temp,mydata$ISI)
regplot = PlotRegressiveLinearModel(mydata$temp,mydata$ISI)
lineplot = PlotLine(mydata$temp)
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
#4
wk1 = WK_R(mydata,mydata2)
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
#4
wk1 = WK_R(mydata,mydata2)
#4
wk1 = WK_R(mydata,mydata2)
wk1 = KMeansFit(mydata,1)
wk2 = KMeansFit(mydata,2)
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
#Run Answers:
#1
wkCalc = CalcWK(KMeansFit(mydata,3),KMeansFit(mydata2,3))
#Plot Line Graph WK
PlotLineWK<-function(idata,wkValues)
{
wkLine = plot(idata,"l")
}
#Run Answers:
#1
wkCalc = CalcWK(KMeansFit(mydata,3),KMeansFit(mydata2,3))
#Run Answers:
#1
wk1 = WK_R(mydata,mydata2)
#Run Answers:
#1
wk1 = WK_R(mydata,mydata2)
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
#Run Answers:
#1
wk1 = WK_R(KMeansFit(mydata,2),KMeansFit(mydata2,2))
#Run Answers:
#1
wk1 = WK_R(KMeansFit(mydata,2),KMeansFit(mydata2,3))
wk2 = WK_R(KMeansFit(mydata,3),KMeansFit(mydata2,3))
#Run Answers:
#1
wk1 = WK_R(KMeansFit(mydata,2),KMeansFit(mydata2,2))
wk2 = WK_R(KMeansFit(mydata,3),KMeansFit(mydata2,2))
wk2 = WK_R(KMeansFit(mydata,2),KMeansFit(mydata2,2))
wk2 = WK_R(KMeansFit(mydata,2),KMeansFit(mydata2,2))
#2
h1 = HierarchicalPlot(mydata,"single")
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
#Run Answers:
#1
wk1 = WK_R(KMeansFit(mydata,2),KMeansFit(mydata2,2))
wk2 = WK_R(KMeansFit(mydata,2),KMeansFit(mydata2,2))
#Run Answers:
#1
wk1 = WK_R(KMeansFit(mydata,2),KMeansFit(mydata2,2))
#Run Answers:
#1
wk1 = WK_R(KMeansFit(mydata,4),mydata2$X1)
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
#Run Answers:
#1
wk1 = WK_R(KMeansFit(mydata,4),mydata2$X1)
#Run Answers:
#1
wk1 = WK_R(KMeansFit(mydata,4),mydata2$X1)
#Run Answers:
#1
wk1 = WK_R(KMeansFit(mydata,2),mydata2$X1)
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
output = data.frame(KVector,WKVector)
plot(output)
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
plot(output)
wk1 = WK_R(KMeansFit(mydata,2),mydata2$X1)
WKVector <-vector(mode="integer",length = K)
KVector <-vector(mode="integer",length = K)
for (i in 1: k)
output = data.frame(KVector,WKVector)
plot(output)
WKVector <-vector(mode="integer",length = K)
KVector <-vector(mode="integer",length = K)
for (i in 1: k)
output = data.frame(KVector,WKVector)
plot(output)
plot(output)
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
KVector,WKVector
plot(output)
plot(output,"l")
#3
scatteredCluster = KMeansFit(mydata,2)
#2
h1 = HierarchicalPlot(mydata,"single")
h2 = HierarchicalPlot(mydata,"complete")
h3 = HierarchicalPlot(mydata,"average")
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
#Hierarchical Clustering
HierarchicalPlot<-function(idata,fitMethod)
{
d <- dist(idata, method = "euclidean")
fit <- hclust(d, method = fitMethod)
plot(fit)
return(fit)
}
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
h2 = HierarchicalPlot(mydata,"complete")
(mydata,"single")
#2 & 4
h1 = HierarchicalPlot(mydata,"single")
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
#Run Answers:
#1 & 5
wk1 = WK_R(KMeansFit(mydata,1),mydata2$X1)
#Run Answers:
#1 & 5
wk1 = WK_R(KMeansFit(mydata,1),mydata2$X1)
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
#Set Directory to this current directory
this.dir <- dirname(parent.frame(2)$ofile)
setwd(this.dir)
#WK Source
source("WK_R.r")
mydata = read.csv('iris.csv', sep=",")
mydata = na.omit(mydata)
mydata = scale(mydata)
mydata2 = read.csv('iris_real.csv', sep=",")
#Hierarchical Clustering
HierarchicalPlot<-function(idata,fitMethod)
{
d <- dist(idata, method = "euclidean")
fit <- hclust(d, method = fitMethod)
plot(fit)
return(fit)
}
#create clusters by cutting dendogram
#KMeans Clustering
KMeansFit<-function(idata,kvalue)
{
fit<-kmeans(idata,kvalue)
aggregate(idata,by=list(fit$cluster),FUN=mean)
Kgroups=fit$cluster
plot(idata,col=Kgroups)
return(Kgroups)
}
#Calculate WK for K means
CalcWK<-function(kgroup1,kgroup2)
{
wk=WK_R(kgroup1,kgroup2)
return(wk)
}
#Run Answers:
#1 & 5
wk1 = WK_R(KMeansFit(mydata,1),mydata2$X1)
K=5
WKVector <-vector(mode="integer",length = K)
KVector <-vector(mode="integer",length = K)
for (i in 1: K)
{
wk=WK_R(KMeansFit(mydata,i+1),mydata2$X1)
WKVector[i]=wk
KVector[i]=i+1
}
output = data.frame(KVector,WKVector)
plot(output)
#2 & 4
h1 = HierarchicalPlot(mydata,"single")
h2 = HierarchicalPlot(mydata,"complete")
h3 = HierarchicalPlot(mydata,"average")
#3
scatteredCluster = KMeansFit(mydata,3)
#Run Answers:
#1 & 5
wk1 = WK_R(KMeansFit(mydata,1),mydata2$X1)
#Run Answers:
#1 & 5
wk1 = WK_R(KMeansFit(mydata,3),mydata2$X1)
plot(output)
#2 & 4
h1 = HierarchicalPlot(mydata,"single")
h2 = HierarchicalPlot(mydata,"complete")
h3 = HierarchicalPlot(mydata,"average")
source('C:/Projects/CS3002/cs3002-1641591/Lab 2/1641591.R')
h3 = HierarchicalPlot(mydata,"average")
plot(output)
